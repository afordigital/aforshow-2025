---
const links = [
  {
    href: "/#",
    label: "Inicio",
  },
  {
    href: "/#info",
    label: "Info",
  },
  {
    href: "/#speakers",
    label: "Charlas",
  },
  {
    href: "/#ticket",
    label: "Ticket",
  },
  {
    href: "/#faq",
    label: "FAQ",
  },
];

interface Props {
  class?: string;
  childClass?: string;
}

const { class: classname, childClass, ...props } = Astro.props;
---

<nav class={classname} {...props} data-links>
  <ul class={childClass}>
    {
      links.map(({ href, label }) => (
        <li>
          <a
            href={href}
            class="font-medium relative after:absolute after:-bottom-2 after:left-1/2 after:-translate-x-1/2 after:h-0.5 after:w-0 after:bg-current after:transition-all after:duration-300 hover:after:w-full"
          >
            {label}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<script>
  const nav = document.querySelector("nav[data-links]");
  if (nav) {
    const anchors = Array.from(nav.querySelectorAll("a[href]"));
    const activeClasses = ["after:w-full"];
    const validHashes = ["", "info", "speakers", "ticket", "faq"];

    function updateActiveLink() {
      const hash = window.location.hash.replace('#', '');
      const pathname = window.location.pathname;
      const onHome = pathname === "/" || pathname === "/index.html";
      
      if (onHome && hash && !validHashes.includes(hash)) {
        window.location.href = '/404';
        return;
      }
      
      anchors.forEach((anchor) => {
        const href = anchor.getAttribute("href") || "";
        const isHomeLink = href === "/#" || href === "/";
        
        if (onHome && href.startsWith("/#")) {
          const sectionId = href.substring(2);
          const isActive = hash === sectionId || (hash === "" && isHomeLink);
          
          activeClasses.forEach((cls) => anchor.classList.toggle(cls, isActive));
          anchor.setAttribute("aria-current", isActive ? "page" : "false");
        } 
        else if (isHomeLink) {
          const isActive = onHome && hash === "";
          activeClasses.forEach((cls) => anchor.classList.toggle(cls, isActive));
          anchor.setAttribute("aria-current", isActive ? "page" : "false");
        }
        else {
          activeClasses.forEach((cls) => anchor.classList.remove(cls));
          anchor.setAttribute("aria-current", "false");
        }
      });
    }

    updateActiveLink();
    window.addEventListener("hashchange", updateActiveLink);
    window.addEventListener("load", updateActiveLink);
  }
</script>